{"version":3,"sources":["./src/app/services/dashboard.service.ts","./src/app/router/router.ts","./src/environments/environment.ts","./src/app/views/footerView.ts","./src/app/views/footerView.html","./src/app/views/headerView.ts","./src/app/views/headerView.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/views/userPannelView.ts","./src/app/views/userPannelView.html","./src/app/views/depotListView.ts","./src/app/views/depotListView.html","./src/app/app.module.ts","./src/app/Pages/dashboardPage.component.ts","./src/app/Pages/dashboardPage.component.html","./src/app/views/storageListView.ts","./src/app/views/storageListView.html","./src/app/Pages/loginPage.component.ts","./src/app/Pages/loginPage.component.html","./src/app/services/authActivator.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppDepot } from \"../shared/AppDepot\";\r\nimport { LoginRequest, LoginResult } from \"../shared/LoginResults\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AppStorage } from \"../shared/AppStorage\";\r\nimport { AppUser } from \"../shared/AppUser\";\r\n\r\n\r\n@Injectable()\r\nexport default class Dashboard {\r\n    public appName: string = \"DepoiT\";\r\n    public user: AppUser;\r\n\r\n    public depots: AppDepot[] = [];\r\n    public activeDepots: number;\r\n    public storages: AppStorage[] = [];\r\n\r\n    errorMessage = \"\";\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    get loginRequred(): Observable<boolean> {\r\n        return this.http.post<boolean>(\"/api/authenticate/istokenvalid\", null, this.getHeaders());\r\n    }\r\n\r\n    login(creds: LoginRequest) {\r\n        return this.http.post<LoginResult>(\"/api/authenticate/createtoken\", creds).pipe(map(data => {\r\n            this.setSession(data.token);\r\n        }));\r\n    }\r\n\r\n    getUser() {\r\n        return this.http.post<AppUser>(\"/api/user/getme\", \"\", this.getHeaders()).pipe(map(data => this.user = data));\r\n    }\r\n\r\n    private setSession(token: string) {\r\n        localStorage.setItem('id_token', token);\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"id_token\");\r\n    }\r\n\r\n    private getHeaders() {\r\n        return { headers: new HttpHeaders().set(\"Authorization\", `Bearer ${localStorage.getItem(\"id_token\")}`) };\r\n    }\r\n\r\n    getDepots() {\r\n        return this.http.post<AppDepot[]>(\"/api/depot/getbyparent\", \"\", this.getHeaders()).pipe(map(data => this.depots = data));\r\n    }\r\n\r\n    setActiveDepot(depotId: number) {\r\n        this.activeDepots = depotId;\r\n        this.getStorages().subscribe();\r\n    }\r\n\r\n    getStorages() {\r\n        return this.http.post<AppStorage[]>(\"/api/storage/getbyparent\", this.activeDepots, this.getHeaders()).pipe(map(data => this.storages = data));\r\n    }\r\n\r\n    getItems(storageId: number) {\r\n        return this.http.post<AppStorage[]>(\"/api/storage/getbyparent\", this.activeDepots, this.getHeaders()).pipe(map(data => this.storages = data));\r\n    }\r\n\r\n}","import { RouterModule } from \"@angular/router\";\r\nimport DashboardPage from \"../Pages/dashboardPage.component\";\r\nimport { LoginPage } from \"../Pages/loginPage.component\";\r\nimport { AuthActivator } from \"../services/authActivator\";\r\n\r\nconst routes = [\r\n    { path: \"\", component: DashboardPage , canActivate: [AuthActivator]},\r\n    { path: \"login\", component: LoginPage },\r\n    { path: \"**\", redirectTo: \"/\"},\r\n];\r\n\r\nconst router = RouterModule.forRoot(routes, { useHash: true });\r\n\r\nexport default router;","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from \"@angular/core\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\n\r\n@Component({\r\n    selector: \"footer-section\",\r\n    templateUrl: \"./footerView.html\",\r\n    styleUrls: [\"./footerView.css\"],\r\n})\r\nexport class FooterView {\r\n    constructor(public dashboard: Dashboard) {\r\n\r\n    }\r\n}","<footer class=\"container\">\r\n    <div class=\"text-center\">Copyright 2021 {{ dashboard.appName}}</div>\r\n</footer>","import { Component } from \"@angular/core\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\n\r\n@Component({\r\n    selector: \"header-section\",\r\n    templateUrl: \"./headerView.html\",\r\n    styleUrls: [\"./listView.css\",],\r\n})\r\nexport class HeaderView {\r\n    constructor(public dashboard: Dashboard) {\r\n\r\n    }\r\n}","<header class=\"container-fluid\">\r\n    <nav class=\" row navbar navbar-dark bg-dark navbar-expand-md\">\r\n        <h1 class=\"col navbar-brand\"><i class=\"fas fa-paint-brush\"></i>{{dashboard.appName}}</h1>\r\n        <button class=\"col navbar-toggler\" data-toggle=\"collapse\" data-target=\"#theMenu\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div id=\"theMenu\" class=\"col navbar-collapse collapse\">\r\n            <ul class=\"navbar-nav\">\r\n                <li class=\"nav-item\"><a class=\"nav-link\" asp-controller=\"Dashboard\" asp-action=\"Index\">Dashboard</a></li>\r\n                <li class=\"nav-item\"><a class=\"nav-link\" asp-controller=\"Wizard\" asp-action=\"Index\">Wizard</a></li>\r\n                <li class=\"nav-item\"><a class=\"nav-link\" href=\"swagger/index.html\">Swagger</a></li>\r\n            </ul>\r\n        </div>\r\n        <div class=\"col-3\">\r\n            <user-pannel></user-pannel>\r\n        </div>\r\n    </nav>\r\n</header>\r\n","import { Component } from '@angular/core';\nimport Dashboard from './services/dashboard.service';\r\n\n@Component({\n    selector: \"the-dashboard\",\n    templateUrl: \"./app.component.html\",\n    styleUrls: []\n})\nexport class AppComponent {\n    title = 'Dashboard';\n\n    constructor(public dashboard: Dashboard) {\n\r\n    }\n}\n","<div *ngIf=\"dashboard.errorMessage\" class=\"alert alert-danger\">{{ store.errorMessage }}</div>\r\n<router-outlet></router-outlet>","import { Component, OnInit } from \"@angular/core\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\n\r\n@Component({\r\n    selector: \"user-pannel\",\r\n    templateUrl: \"./userPannelView.html\",\r\n    styleUrls: [\"./listView.css\",],\r\n})\r\nexport class UserPannelView implements OnInit {\r\n    public userMenuShow: boolean = false;\r\n\r\n    constructor(public dashboard: Dashboard) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dashboard.getUser().subscribe();\r\n    }\r\n\r\n    changeMenuVisibility() {\r\n        this.userMenuShow = !this.userMenuShow;\r\n    }\r\n}","<div class=\"col\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm align-content-end\" *ngIf=\"dashboard.user!==undefined && dashboard.user.name!==undefined\" (click)=\"changeMenuVisibility()\">\r\n            {{ dashboard.user.name }}\r\n        </div>\r\n        <div class=\"col-sm\" name=\"menu\" ng-show=\"userMenuShow\">\r\n                <a class=\"nav-link\" (click)=\"dashboard.logout()\" href=\"/dashboard\">Log Out</a>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\n\r\n@Component({\r\n    selector: \"depot-list\",\r\n    templateUrl: \"./depotListView.html\",\r\n    styleUrls: [\"./listView.css\",],\r\n})\r\nexport class DepotListView implements OnInit {\r\n\r\n    constructor(public dashboard: Dashboard) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dashboard.getDepots().subscribe();\r\n    }\r\n\r\n}","<div class=\"col\">\r\n    <div class=\"row\" *ngFor=\"let p of dashboard.depots\" (click)=\"dashboard.setActiveDepot(p.id)\">\r\n        <ul class=\"col-12 depot-props list-unstyled\">\r\n            <li><strong>Name</strong>: {{ p.name }}</li>\r\n            <li><strong>Address</strong>: {{ p.address }}</li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginPage } from './Pages/loginPage.component';\r\n\r\nimport DashboardPage from './Pages/dashboardPage.component';\r\nimport Dashboard from './services/dashboard.service';\r\n\r\nimport { AuthActivator } from './services/authActivator';\r\nimport { FormsModule } from '@angular/forms';\r\nimport router from './router/router';\r\nimport { DepotListView } from './views/depotListView';\r\nimport { StorageListView } from './views/storageListView';\r\nimport { UserPannelView } from './views/userPannelView';\r\nimport { FooterView } from './views/footerView';\r\nimport { HeaderView } from './views/headerView';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        HeaderView,\r\n        FooterView,\r\n        DashboardPage,\r\n        LoginPage,\r\n        DepotListView,\r\n        StorageListView,\r\n        UserPannelView,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        router\r\n    ],\r\n    providers: [\r\n        Dashboard,\r\n        AuthActivator,\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"the-dashboard\",\r\n    templateUrl: \"dashboardPage.component.html\",\r\n})\r\nexport default class DashboardPage {\r\n    public title = \"DepoiT Dashboard\";\r\n}","<div class=\"col\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <header-section></header-section>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-9\">\r\n            <h2>Storages</h2>\r\n            <storage-list></storage-list>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <h2>Depots</h2>\r\n            <depot-list></depot-list>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <footer-section></footer-section>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\n\r\n@Component({\r\n    selector: \"storage-list\",\r\n    templateUrl: \"./storageListView.html\",\r\n    styleUrls: [\"./listView.css\",],\r\n})\r\nexport class StorageListView /*implements OnInit*/ {\r\n\r\n    constructor(public dashboard: Dashboard) {\r\n\r\n    }\r\n\r\n}","<div class=\"col\">\r\n    <div class=\"row\" *ngFor=\"let p of dashboard.storages\" (click)=\"dashboard.getItems(p.id)\">\r\n        <ul class=\"col-12 storage-props list-unstyled\">\r\n            <li><strong>Name</strong>: {{ p.name }}{{ p.nameSplitter }}{{ p.nameB }}{{ p.nameSplitter }}{{ p.nameC }}</li>\r\n        </ul>\r\n        <item-list></item-list>\r\n    </div>\r\n</div>","import { style } from \"@angular/animations\";\r\nimport { error } from \"@angular/compiler/src/util\";\r\nimport { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\nimport { LoginRequest } from \"../shared/LoginResults\";\r\n\r\n@Component({\r\n    selector: \"login-page\",\r\n    templateUrl: \"loginPage.component.html\",\r\n    styleUrls: [\"./loginPage.css\",],\r\n})\r\nexport class LoginPage {\r\n    constructor(\r\n        private dashboard: Dashboard,\r\n        private router: Router) {\r\n\r\n    }\r\n\r\n    public creds: LoginRequest = {\r\n        name: \"\",\r\n        password: \"\",\r\n    };\r\n\r\n    public errorMessage = \"\";\r\n\r\n    onLogin() {\r\n        this.dashboard.login(this.creds).subscribe(() => {\r\n            this.router.navigate([\"\"])\r\n        }, error => {\r\n            console.log(error);\r\n            this.errorMessage = \"Failed to login\";\r\n        });\r\n    }\r\n}","<div class=\"row align-items-center\">\r\n    <div class=\"rectangle col-md-4 offset-4\">\r\n        <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\r\n        <form (submit)=\"onLogin()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Username</label>\r\n                <input name=\"username\" type=\"text\" class=\"form-control\" #username=\"ngModel\" [(ngModel)]=\"creds.name\" required/>\r\n                <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors.required\" >Required</div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input name=\"password\" type=\"password\" class=\"form-control\" #password=\"ngModel\" [(ngModel)]=\"creds.password\" required />\r\n                <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid && password.errors.required\">Required</div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"form-check\">\r\n                    <input name=\"rememberMeFlag\" type=\"checkbox\" class=\"form-check-input\" />\r\n                    <label for=\"rememberMeFlag\" class=\"form-check-label\">Remember Me</label>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"submit\" value=\"Login\" class=\"btn btn-success\" [disabled]=\"username.invalid || password.invalid\"/>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport Dashboard from \"./dashboard.service\";\r\n\r\n@Injectable()\r\nexport class AuthActivator implements CanActivate {\r\n\r\n    constructor(\r\n        private dashboard: Dashboard,\r\n        private router: Router) {\r\n\r\n    }\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot):\r\n        Observable<boolean> {\r\n\r\n        return this.dashboard.loginRequred.pipe(\r\n            tap(isAuth => {\r\n                if (!isAuth) {\r\n                    this.router.navigate([\"login\"]);\r\n                }\r\n            })\r\n        );\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}