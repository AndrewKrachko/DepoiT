{"version":3,"sources":["./src/app/views/parameterView.ts","./src/app/services/dashboard.service.ts","./src/app/router/router.ts","./src/app/views/itemView.ts","./src/app/views/itemView.html","./src/environments/environment.ts","./src/app/views/footerView.ts","./src/app/views/footerView.html","./src/app/shared/AppFieldTypeEnum.ts","./src/app/views/headerView.ts","./src/app/views/headerView.html","./src/app/views/itemListView.ts","./src/app/views/itemListView.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/views/userPannelView.ts","./src/app/views/userPannelView.html","./src/app/views/depotListView.ts","./src/app/views/depotListView.html","./src/app/app.module.ts","./src/app/Pages/dashboardPage.component.ts","./src/app/Pages/dashboardPage.component.html","./src/app/views/storageListView.ts","./src/app/views/storageListView.html","./src/app/Pages/loginPage.component.ts","./src/app/Pages/loginPage.component.html","./src/app/services/authActivator.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { AppField } from \"../shared/AppField\";\r\nimport { AppFieldPattern } from \"../shared/AppFieldPattern\";\r\nimport { AppFieldTypeEnum } from \"../shared/AppFieldTypeEnum\";\r\nimport { ItemView } from \"./itemView\";\r\n\r\n@Component({\r\n    selector: \"the-parameter\",\r\n    template: \"\",\r\n})\r\nexport class ParameterView implements OnInit {\r\n    @Input() id: string;\r\n\r\n    constructor(private itemView: ItemView) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.addFields(Number.parseInt(this.id));\r\n    }\r\n\r\n    addFields(id: number) {\r\n        let searchedPattern = this.itemView.item.pattern.fieldPatterns.find(fp => fp.id == id);\r\n        const parentId = this.itemView.getTheParameterId(id.toString());\r\n        const parent = document.getElementById(parentId);\r\n\r\n        this.addFieldName(parent, searchedPattern);\r\n        this.addValueField(parent, searchedPattern);\r\n        if (searchedPattern.fieldType == AppFieldTypeEnum.NumberWithTolerance) {\r\n            this.addToleranceField(parent, searchedPattern);\r\n        }\r\n        if (searchedPattern.fieldType == AppFieldTypeEnum.NumberWithDifferentialTolerance) {\r\n            this.addDoubleToleranceField(parent, searchedPattern);\r\n        }\r\n    }\r\n\r\n    addFieldName(\r\n        parent: HTMLElement,\r\n        searchedPattern: AppFieldPattern) {\r\n\r\n        const label = document.createElement(\"label\");\r\n        label.innerText = searchedPattern.name;\r\n        label.className = \"col-3\";\r\n        parent.appendChild(label);\r\n    }\r\n\r\n    addValueField(\r\n        parent: HTMLElement,\r\n        searchedPattern: AppFieldPattern) {\r\n\r\n        let input: HTMLElement;\r\n        let name: string;\r\n\r\n        switch (searchedPattern.fieldType) {\r\n            case AppFieldTypeEnum.NumberFromSet:\r\n            case AppFieldTypeEnum.StringValueFromSet: {\r\n                input = document.createElement(\"select\");\r\n                let options: any[];\r\n\r\n                if (searchedPattern.fieldType == AppFieldTypeEnum.NumberFromSet) {\r\n                    options = searchedPattern.valueSet;\r\n                    name = \"value\";\r\n                } else {\r\n                    options = searchedPattern.stringSet;\r\n                    name = \"valueString\";\r\n                }\r\n                options.forEach(op => {\r\n                    const optionElement = document.createElement(\"option\");\r\n                    optionElement.text = op;\r\n                    (<HTMLSelectElement>input).add(optionElement);\r\n                });\r\n\r\n                (<HTMLSelectElement>input).selectedIndex = options.indexOf(this.getValue(searchedPattern));\r\n                break;\r\n            }\r\n            default: {\r\n                input = document.createElement(\"input\");\r\n\r\n                if (searchedPattern.fieldType == AppFieldTypeEnum.StringValue) {\r\n                    name = \"valueString\";\r\n                } else {\r\n                    name = \"value\";\r\n                }\r\n\r\n                (<HTMLInputElement>input).value = this.getValue(searchedPattern).toString();\r\n            }\r\n        }\r\n        input.setAttribute(\"name\", name);\r\n\r\n        input.className = \"col-3\";\r\n        parent.appendChild(input);\r\n    }\r\n\r\n    addToleranceField(\r\n        parent: HTMLElement,\r\n        searchedPattern: AppFieldPattern) {\r\n\r\n        const toleranceInput = document.createElement(\"input\");\r\n        toleranceInput.setAttribute(\"name\", \"tolerance\");\r\n        toleranceInput.value = this.getTolerance(searchedPattern).toString();\r\n\r\n        parent.appendChild(toleranceInput);\r\n    }\r\n\r\n    addDoubleToleranceField(\r\n        parent: HTMLElement,\r\n        searchedPattern: AppFieldPattern) {\r\n\r\n        const minToleranceInput = document.createElement(\"input\");\r\n        const maxToleranceInput = document.createElement(\"input\");\r\n        minToleranceInput.setAttribute(\"name\", \"toleranceMin\");\r\n        maxToleranceInput.setAttribute(\"name\", \"toleranceMax\");\r\n        minToleranceInput.value = this.getMinTolerance(searchedPattern).toString();\r\n        maxToleranceInput.value = this.getMaxTolerance(searchedPattern).toString();\r\n\r\n        parent.appendChild(minToleranceInput);\r\n        parent.appendChild(maxToleranceInput);\r\n    }\r\n\r\n    getValue(searchedPattern: AppFieldPattern) {\r\n        let searchedItem = this.itemView.item.fields.find(f => f.fieldPattern.id == searchedPattern.id);\r\n\r\n        if (searchedItem !== undefined) {\r\n            if (searchedPattern.fieldType == AppFieldTypeEnum.StringValue ||\r\n                searchedPattern.fieldType == AppFieldTypeEnum.StringValueFromSet) {\r\n                return searchedItem.valueString;\r\n            } else {\r\n                return searchedItem.value;\r\n            }\r\n        } else {\r\n            if (searchedPattern.fieldType == AppFieldTypeEnum.StringValue ||\r\n                searchedPattern.fieldType == AppFieldTypeEnum.StringValueFromSet) {\r\n                return searchedPattern.defaultString;\r\n            } else {\r\n                return searchedPattern.defaultValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    getTolerance(searchedPattern: AppFieldPattern) {\r\n        let searchedItem = this.itemView.item.fields.find(f => f.fieldPattern.id == searchedPattern.id);\r\n\r\n        if (searchedItem !== undefined) {\r\n            return searchedItem.tolerance;\r\n        } else {\r\n            return searchedPattern.tolerance;\r\n        }\r\n    }\r\n\r\n    getMinTolerance(searchedPattern: AppFieldPattern) {\r\n        let searchedItem = this.itemView.item.fields.find(f => f.fieldPattern.id == searchedPattern.id);\r\n\r\n        if (searchedItem !== undefined) {\r\n            return searchedItem.toleranceMin;\r\n        } else {\r\n            return searchedPattern.toleranceMin;\r\n        }\r\n    }\r\n\r\n    getMaxTolerance(searchedPattern: AppFieldPattern) {\r\n        let searchedItem = this.itemView.item.fields.find(f => f.fieldPattern.id == searchedPattern.id);\r\n\r\n        if (searchedItem !== undefined) {\r\n            return searchedItem.toleranceMax;\r\n        } else {\r\n            return searchedPattern.toleranceMax;\r\n        }\r\n    }\r\n}","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppDepot } from \"../shared/AppDepot\";\r\nimport { LoginRequest, LoginResult } from \"../shared/LoginResults\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AppStorage } from \"../shared/AppStorage\";\r\nimport { AppUser } from \"../shared/AppUser\";\r\nimport { AppItem } from \"../shared/AppItem\";\r\n\r\n\r\n@Injectable()\r\nexport default class Dashboard {\r\n    public appName: string = \"DepoiT\";\r\n    public user: AppUser;\r\n\r\n    public depots: AppDepot[] = [];\r\n    public activeDepots: number;\r\n    public storages: AppStorage[] = [];\r\n\r\n    errorMessage = \"\";\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    get loginRequred(): Observable<boolean> {\r\n        return this.http.post<boolean>(\"/api/authenticate/istokenvalid\", null, this.getHeaders());\r\n    }\r\n\r\n    login(creds: LoginRequest) {\r\n        return this.http.post<LoginResult>(\"/api/authenticate/createtoken\", creds).pipe(map(data => {\r\n            this.setSession(data.token);\r\n        }));\r\n    }\r\n\r\n    getUser() {\r\n        return this.http.post<AppUser>(\"/api/user/getme\", \"\", this.getHeaders()).pipe(map(data => this.user = data));\r\n    }\r\n\r\n    private setSession(token: string) {\r\n        localStorage.setItem('id_token', token);\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"id_token\");\r\n    }\r\n\r\n    private getHeaders() {\r\n        return { headers: new HttpHeaders().set(\"Authorization\", `Bearer ${localStorage.getItem(\"id_token\")}`) };\r\n    }\r\n\r\n    getDepots() {\r\n        return this.http.post<AppDepot[]>(\"/api/depot/getbyparent\", \"\", this.getHeaders()).pipe(map(data => this.depots = data));\r\n    }\r\n\r\n    setActiveDepot(depotId: number) {\r\n        this.activeDepots = depotId;\r\n        this.getStorages().subscribe();\r\n    }\r\n\r\n    getStorages() {\r\n        return this.http.post<AppStorage[]>(\"/api/storage/getbyparent\", this.activeDepots, this.getHeaders()).pipe(map(data => this.storages = data));\r\n    }\r\n\r\n    getItems(storageId: number) {\r\n        return this.http.post<AppItem[]>(\"/api/item/getbyparent\", storageId, this.getHeaders());\r\n    }\r\n\r\n    getItem(itemId: number) {\r\n        return this.http.post<AppItem>(\"/api/item/get\", itemId, this.getHeaders());\r\n    }\r\n\r\n}","import { RouterModule } from \"@angular/router\";\r\nimport DashboardPage from \"../Pages/dashboardPage.component\";\r\nimport { LoginPage } from \"../Pages/loginPage.component\";\r\nimport { AuthActivator } from \"../services/authActivator\";\r\n\r\nconst routes = [\r\n    { path: \"\", component: DashboardPage , canActivate: [AuthActivator]},\r\n    { path: \"login\", component: LoginPage },\r\n    { path: \"**\", redirectTo: \"/\"},\r\n];\r\n\r\nconst router = RouterModule.forRoot(routes, { useHash: true });\r\n\r\nexport default router;","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { map } from \"rxjs/operators\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\nimport { AppField } from \"../shared/AppField\";\r\nimport { AppFieldPattern } from \"../shared/AppFieldPattern\";\r\nimport { AppFieldTypeEnum } from \"../shared/AppFieldTypeEnum\";\r\nimport { AppItem } from \"../shared/AppItem\";\r\nimport { ItemListView } from \"./itemListView\";\r\n\r\n@Component({\r\n    selector: \"the-item\",\r\n    templateUrl: \"./itemView.html\",\r\n    styleUrls: [\"./itemView.css\",],\r\n})\r\nexport class ItemView implements OnInit {\r\n\r\n    @Input() itemId: string;\r\n    public item: AppItem;\r\n    public prefix: string = \"parameter-\";\r\n\r\n    constructor(public dashboard: Dashboard,\r\n        private itemListView: ItemListView) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const id: number = Number.parseInt(this.itemId.replace(this.itemListView.prefix, \"\"));\r\n        this.dashboard.getItem(id).pipe(map(data => this.item = data)).subscribe();\r\n    }\r\n\r\n    getTheParameterId(id: string) {\r\n        return `${this.itemId}-${this.prefix}${id}`;\r\n    }\r\n}","<div class=\"item-parameters-list col-12\" [id]=\"itemId\" *ngIf=\"item !== undefined\" hidden>\r\n    Parameters:\r\n    <div class=\"row col-12\" *ngFor=\"let p of item.pattern.fieldPatterns\">\r\n        <div [id]=\"getTheParameterId(p.id)\" class=\"row col-11\">\r\n            <the-parameter [id]=\"p.id\"></the-parameter>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from \"@angular/core\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\n\r\n@Component({\r\n    selector: \"footer-section\",\r\n    templateUrl: \"./footerView.html\",\r\n    styleUrls: [\"./footerView.css\"],\r\n})\r\nexport class FooterView {\r\n    constructor(public dashboard: Dashboard) {\r\n\r\n    }\r\n}","<footer class=\"container\">\r\n    <div class=\"text-center\">Copyright 2021 {{ dashboard.appName}}</div>\r\n</footer>","export enum AppFieldTypeEnum {\r\n    Number,\r\n    NumberWithTolerance,\r\n    NumberWithDifferentialTolerance,\r\n    NumberFromSet,\r\n    StringValue,\r\n    StringValueFromSet\r\n}","import { Component } from \"@angular/core\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\n\r\n@Component({\r\n    selector: \"header-section\",\r\n    templateUrl: \"./headerView.html\",\r\n    styleUrls: [\"./listView.css\",],\r\n})\r\nexport class HeaderView {\r\n    constructor(public dashboard: Dashboard) {\r\n\r\n    }\r\n}","<header class=\"container-fluid\">\r\n    <nav class=\" row navbar navbar-dark bg-dark navbar-expand-md\">\r\n        <h1 class=\"col navbar-brand\"><i class=\"fas fa-paint-brush\"></i>{{dashboard.appName}}</h1>\r\n        <button class=\"col navbar-toggler\" data-toggle=\"collapse\" data-target=\"#theMenu\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div id=\"theMenu\" class=\"col navbar-collapse collapse\">\r\n            <ul class=\"navbar-nav\">\r\n                <li class=\"nav-item\"><a class=\"nav-link\" asp-controller=\"Dashboard\" asp-action=\"Index\">Dashboard</a></li>\r\n                <li class=\"nav-item\"><a class=\"nav-link\" asp-controller=\"Wizard\" asp-action=\"Index\">Wizard</a></li>\r\n                <li class=\"nav-item\"><a class=\"nav-link\" href=\"swagger/index.html\">Swagger</a></li>\r\n            </ul>\r\n        </div>\r\n        <div class=\"col-3\">\r\n            <user-pannel></user-pannel>\r\n        </div>\r\n    </nav>\r\n</header>\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { map } from \"rxjs/operators\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\nimport { AppItem } from \"../shared/AppItem\";\r\nimport { VisibilityStatus } from \"./VisibilityStatus\";\r\n\r\n@Component({\r\n    selector: \"item-list\",\r\n    templateUrl: \"./itemListView.html\",\r\n    styleUrls: [\"./listView.css\",],\r\n})\r\nexport class ItemListView implements OnInit {\r\n    @Input() storageId: number;\r\n    public items: AppItem[];\r\n    public showItems: VisibilityStatus[] = [];\r\n    public prefix: string = \"item-\";\r\n\r\n    constructor(public dashboard: Dashboard) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dashboard.getItems(this.storageId).pipe(map(data => this.items = data)).subscribe();\r\n    }\r\n\r\n    getTheItemId(id: string) {\r\n        return this.prefix + id;\r\n    }\r\n\r\n    changeItemVisibility(objectToken: string) {\r\n        let itemState = this.showItems.find(s => s.name == objectToken);\r\n\r\n        if (itemState == undefined) {\r\n            itemState = { name: objectToken, show: false };\r\n            this.showItems.push(itemState);\r\n        }\r\n\r\n        itemState.show = !itemState.show;\r\n        document.getElementById(this.prefix + objectToken).hidden = itemState.show;\r\n    }\r\n\r\n}","<label class=\"col-12\" *ngIf=\"items !== undefined\">Item categories: {{ items.length }}</label>\r\n<div *ngFor=\"let p of items\">\r\n    <div class=\"col-12\">\r\n        <div (click)=\"changeItemVisibility(p.id)\">Name: {{p.name}}</div>\r\n        <the-item [itemId]=\"getTheItemId(p.id)\" class=\"row\"></the-item>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\nimport Dashboard from './services/dashboard.service';\r\n\n@Component({\n    selector: \"the-dashboard\",\n    templateUrl: \"./app.component.html\",\n    styleUrls: []\n})\nexport class AppComponent {\n    title = 'Dashboard';\n\n    constructor(public dashboard: Dashboard) {\n\r\n    }\n}\n","<div *ngIf=\"dashboard.errorMessage\" class=\"alert alert-danger\">{{ store.errorMessage }}</div>\r\n<router-outlet></router-outlet>","import { Component, OnInit } from \"@angular/core\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\n\r\n@Component({\r\n    selector: \"user-pannel\",\r\n    templateUrl: \"./userPannelView.html\",\r\n    styleUrls: [\"./listView.css\",],\r\n})\r\nexport class UserPannelView implements OnInit {\r\n    public userMenuShow: boolean = false;\r\n\r\n    constructor(public dashboard: Dashboard) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dashboard.getUser().subscribe();\r\n    }\r\n\r\n    changeMenuVisibility() {\r\n        this.userMenuShow = !this.userMenuShow;\r\n    }\r\n}","<div class=\"col\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm align-content-end\" *ngIf=\"dashboard.user!==undefined && dashboard.user.name!==undefined\" (click)=\"changeMenuVisibility()\">\r\n            {{ dashboard.user.name }}\r\n        </div>\r\n        <div class=\"col-sm\" name=\"menu\" ng-show=\"userMenuShow\">\r\n            <a class=\"nav-link\" (click)=\"dashboard.logout()\" href=\"/dashboard\">Log Out</a>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\n\r\n@Component({\r\n    selector: \"depot-list\",\r\n    templateUrl: \"./depotListView.html\",\r\n    styleUrls: [\"./listView.css\",],\r\n})\r\nexport class DepotListView implements OnInit {\r\n\r\n    constructor(public dashboard: Dashboard) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dashboard.getDepots().subscribe();\r\n    }\r\n\r\n}","<div class=\"col\">\r\n    <div class=\"row\" *ngFor=\"let p of dashboard.depots\" (click)=\"dashboard.setActiveDepot(p.id)\">\r\n        <ul class=\"col-12 depot-props list-unstyled\">\r\n            <li><strong>Name</strong>: {{ p.name }}</li>\r\n            <li><strong>Address</strong>: {{ p.address }}</li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginPage } from './Pages/loginPage.component';\r\n\r\nimport DashboardPage from './Pages/dashboardPage.component';\r\nimport Dashboard from './services/dashboard.service';\r\n\r\nimport { AuthActivator } from './services/authActivator';\r\nimport { FormsModule } from '@angular/forms';\r\nimport router from './router/router';\r\nimport { DepotListView } from './views/depotListView';\r\nimport { StorageListView } from './views/storageListView';\r\nimport { UserPannelView } from './views/userPannelView';\r\nimport { FooterView } from './views/footerView';\r\nimport { HeaderView } from './views/headerView';\r\nimport { ItemListView } from './views/itemListView';\r\nimport { ItemView } from './views/itemView';\r\nimport { ParameterView } from './views/parameterView';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        HeaderView,\r\n        FooterView,\r\n        DashboardPage,\r\n        LoginPage,\r\n        DepotListView,\r\n        StorageListView,\r\n        ItemListView,\r\n        ItemView,\r\n        ParameterView,\r\n        UserPannelView,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        router\r\n    ],\r\n    providers: [\r\n        Dashboard,\r\n        AuthActivator,\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"the-dashboard\",\r\n    templateUrl: \"dashboardPage.component.html\",\r\n})\r\nexport default class DashboardPage {\r\n    public title = \"DepoiT Dashboard\";\r\n}","<div class=\"col\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <header-section></header-section>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-9\">\r\n            <h2>Storages</h2>\r\n            <storage-list></storage-list>\r\n        </div>\r\n        <div class=\"col-3\">\r\n            <h2>Depots</h2>\r\n            <depot-list></depot-list>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <footer-section></footer-section>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\nimport { ItemListView } from \"./itemListView\";\r\nimport { VisibilityStatus } from \"./VisibilityStatus\";\r\n\r\n@Component({\r\n    selector: \"storage-list\",\r\n    templateUrl: \"./storageListView.html\",\r\n    styleUrls: [\"./listView.css\",],\r\n})\r\nexport class StorageListView {\r\n\r\n    public showItems: VisibilityStatus[] = [];\r\n\r\n    constructor(public dashboard: Dashboard) {\r\n\r\n    }\r\n\r\n    changeItemsVisibility(objectToken: string) {\r\n        let itemState = this.showItems.find(s => s.name == objectToken);\r\n\r\n        if (itemState == undefined) {\r\n            itemState = { name: objectToken, show: false };\r\n            this.showItems.push(itemState);\r\n        }\r\n\r\n        itemState.show = !itemState.show;\r\n        document.getElementById(objectToken).hidden = itemState.show;\r\n    }\r\n\r\n}\r\n\r\n","<div class=\"col\">\r\n    <div class=\"row storage-item\" *ngFor=\"let p of dashboard.storages\">\r\n        <label class=\"col-12 storage-props list-unstyled\" (click)=\"changeItemsVisibility(p.id)\"><strong>Name</strong>: {{ p.name }}{{ p.nameSplitter }}{{ p.nameB }}{{ p.nameSplitter }}{{ p.nameC }}</label>\r\n        <div [id]=\"p.id\" class=\"col-12\" hidden>\r\n            <item-list [storageId]=\"p.id\"></item-list>\r\n        </div>\r\n    </div>\r\n</div>","import { style } from \"@angular/animations\";\r\nimport { error } from \"@angular/compiler/src/util\";\r\nimport { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\nimport { LoginRequest } from \"../shared/LoginResults\";\r\n\r\n@Component({\r\n    selector: \"login-page\",\r\n    templateUrl: \"loginPage.component.html\",\r\n    styleUrls: [\"./loginPage.css\",],\r\n})\r\nexport class LoginPage {\r\n    constructor(\r\n        private dashboard: Dashboard,\r\n        private router: Router) {\r\n\r\n    }\r\n\r\n    public creds: LoginRequest = {\r\n        name: \"\",\r\n        password: \"\",\r\n    };\r\n\r\n    public errorMessage = \"\";\r\n\r\n    onLogin() {\r\n        this.dashboard.login(this.creds).subscribe(() => {\r\n            this.router.navigate([\"\"])\r\n        }, error => {\r\n            console.log(error);\r\n            this.errorMessage = \"Failed to login\";\r\n        });\r\n    }\r\n}","<div class=\"row align-items-center\">\r\n    <div class=\"rectangle col-md-4 offset-4\">\r\n        <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\r\n        <form (submit)=\"onLogin()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Username</label>\r\n                <input name=\"username\" type=\"text\" class=\"form-control\" #username=\"ngModel\" [(ngModel)]=\"creds.name\" required/>\r\n                <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors.required\" >Required</div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input name=\"password\" type=\"password\" class=\"form-control\" #password=\"ngModel\" [(ngModel)]=\"creds.password\" required />\r\n                <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid && password.errors.required\">Required</div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"form-check\">\r\n                    <input name=\"rememberMeFlag\" type=\"checkbox\" class=\"form-check-input\" />\r\n                    <label for=\"rememberMeFlag\" class=\"form-check-label\">Remember Me</label>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"submit\" value=\"Login\" class=\"btn btn-success\" [disabled]=\"username.invalid || password.invalid\"/>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport Dashboard from \"./dashboard.service\";\r\n\r\n@Injectable()\r\nexport class AuthActivator implements CanActivate {\r\n\r\n    constructor(\r\n        private dashboard: Dashboard,\r\n        private router: Router) {\r\n\r\n    }\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot):\r\n        Observable<boolean> {\r\n\r\n        return this.dashboard.loginRequred.pipe(\r\n            tap(isAuth => {\r\n                if (!isAuth) {\r\n                    this.router.navigate([\"login\"]);\r\n                }\r\n            })\r\n        );\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}