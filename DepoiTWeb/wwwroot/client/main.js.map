{"version":3,"sources":["./src/app/services/dashboard.service.ts","./src/app/router/router.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/Pages/dashboardPage.component.ts","./src/app/Pages/dashboardPage.component.html","./src/app/Pages/loginPage.component.ts","./src/app/Pages/loginPage.component.html","./src/app/services/authActivator.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AppDepot } from \"../shared/AppDepot\";\r\nimport { LoginRequest, LoginResult } from \"../shared/LoginResults\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport default class Dashboard {\r\n    public depots: AppDepot[] = [];\r\n\r\n    public token: string = \"\";\r\n    public tokenExpDate: Date = new Date();\r\n    errorMessage = \"\";\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    get loginRequred(): boolean {\r\n        return this.token.length === 0 || this.tokenExpDate < new Date();\r\n    }\r\n\r\n    login(creds: LoginRequest) {\r\n        return this.http.post<LoginResult>(\"/api/authenticate/createtoken\", creds).pipe(map(data => {\r\n            this.token = data.token;\r\n            this.tokenExpDate = data.tokenExpDate;\r\n        }));\r\n    }\r\n\r\n    getDepots() {\r\n        const headers = new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`);\r\n        return this.http.post<AppDepot[]>(\"/api/Depot/getbyparent\", \"\", { headers: headers }).pipe(map(data => this.depots = data));\r\n    }\r\n}","import { RouterModule } from \"@angular/router\";\r\nimport DashboardPage from \"../Pages/dashboardPage.component\";\r\nimport { LoginPage } from \"../Pages/loginPage.component\";\r\nimport { AuthActivator } from \"../services/authActivator\";\r\n\r\nconst routes = [\r\n    { path: \"\", component: DashboardPage , canActivate: [AuthActivator]},\r\n    { path: \"login\", component: LoginPage },\r\n    { path: \"**\", redirectTo: \"/\"},\r\n];\r\n\r\nconst router = RouterModule.forRoot(routes, { useHash: true });\r\n\r\nexport default router;","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport Dashboard from './services/dashboard.service';\r\n\n@Component({\n    selector: \"the-dashboard\",\n    templateUrl: \"./app.component.html\",\n    styleUrls: []\n})\nexport class AppComponent {\n    title = 'Dashboard';\n\n    constructor(public dashboard: Dashboard) {\n\r\n    }\n}\n","<div *ngIf=\"dashboard.errorMessage\" class=\"alert alert-danger\">{{ store.errorMessage }}</div>\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { LoginPage } from './Pages/loginPage.component';\r\n\r\nimport DashboardPage from './Pages/dashboardPage.component';\r\nimport Dashboard from './services/dashboard.service';\r\n\r\nimport { AuthActivator } from './services/authActivator';\r\nimport { FormsModule } from '@angular/forms';\r\nimport router from './router/router';\r\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        DashboardPage,\n        LoginPage\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        FormsModule,\n        router\n    ],\n    providers: [\n        Dashboard,\n        AuthActivator,\n    ],\n    bootstrap: [AppComponent]\n})\n\nexport class AppModule { }","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"the-dashboard\",\r\n    templateUrl: \"dashboardPage.component.html\",\r\n})\r\nexport default class DashboardPage {\r\n    public title = \"DepoiT Dashboard\";\r\n}","<div class=\"row\">\r\n    <h1>{{ title }}</h1>\r\n    <div class=\"col-md-9\">\r\n        <h2>Storages</h2>\r\n        <!--<storage-list></storage-list>-->\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <h2>Depots</h2>\r\n        <!--<depot-list></depot-list>-->\r\n    </div>\r\n</div>\r\n","import { error } from \"@angular/compiler/src/util\";\r\nimport { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport Dashboard from \"../services/dashboard.service\";\r\nimport { LoginRequest } from \"../shared/LoginResults\";\r\n\r\n@Component({\r\n    selector: \"login-page\",\r\n    templateUrl: \"loginPage.component.html\"\r\n})\r\nexport class LoginPage {\r\n    constructor(\r\n        private dashboard: Dashboard,\r\n        private router: Router) {\r\n\r\n    }\r\n\r\n    public creds: LoginRequest = {\r\n        name: \"\",\r\n        password: \"\",\r\n    };\r\n\r\n    public errorMessage = \"\";\r\n\r\n    onLogin() {\r\n        this.dashboard.login(this.creds).subscribe(() => {\r\n            this.router.navigate([\"\"])\r\n        }, error => {\r\n            console.log(error);\r\n            this.errorMessage = \"Failed to login\";\r\n        });\r\n    }\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-4 col-md-offset-4\">\r\n        <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\r\n        <form (submit)=\"onLogin()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Username</label>\r\n                <input name=\"username\" type=\"text\" class=\"form-control\" #username=\"ngModel\" [(ngModel)]=\"creds.name\" required/>\r\n                <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors.required\" >Required</div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input name=\"password\" type=\"password\" class=\"form-control\" #password=\"ngModel\" [(ngModel)]=\"creds.password\" required />\r\n                <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid && password.errors.required\">Required</div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"form-check\">\r\n                    <input name=\"rememberMeFlag\" type=\"checkbox\" class=\"form-check-input\" />\r\n                    <label for=\"rememberMeFlag\" class=\"form-check-label\">Remember Me</label>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"submit\" value=\"Login\" class=\"btn btn-success\" [disabled]=\"username.invalid || password.invalid\"/>\r\n            </div>\r\n        </form>\r\n        {{ creds | json }}\r\n    </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport Dashboard from \"./dashboard.service\";\r\n\r\n@Injectable()\r\nexport class AuthActivator implements CanActivate {\r\n\r\n    constructor(\r\n        private dashboard: Dashboard,\r\n        private router: Router) {\r\n\r\n    }\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot):\r\n        boolean {\r\n\r\n        if (this.dashboard.loginRequred) {\r\n            this.router.navigate([\"login\"]);\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}